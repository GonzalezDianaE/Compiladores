program
begin
   
{ retorna el factorial de v}
integer factorial (integer v)
begin
  integer limit;
  limit = 15;
  if ( v > limit) then
  begin 
      return (-1);
  end
  
  begin {nuevo bloque} 
	integer c, fact;
	c = 0;
	fact = 1;
    while (c<v)
    begin
       c = c+1;
       fact = fact*c;
    end
    return fact;
  end
end



{ retorna el n esimo primo}
integer nthprime (integer n) begin
    integer i;
    integer divs;
    i = 0;
    divs = 2;
    n = n +1;
    while ( n > 0) 
    begin
      bool divides;
      divides = false;
      i = i + 1;
      while ( ! divides && divs < i) 
      begin
       if ( i % divs == 0) then
         begin 
           divides = true; 
         end
       else
         begin 
            divs = divs + 1; 
         end
      end
      divs = 2;
      if ( ! divides) then
        begin n = n - 1; end
    end
    return i;
end

{retorna la representacion de d en binario}
integer int2bin(integer d)
begin
   bool flagc1;
   integer acum, aux, i;
   acum=0;
   i=0;
   flagc1=true;
   while (flagc1)begin
      if(d>1) then
        begin               
            aux = d % 2;   // toma el ultimo digito
            begin
              bool flagc2;
              integer j;
              j=0;   
              flagc2 =true;           
              while (flagc2)begin    // ubica el digito en la posicion que le corresponde
                if (j<i) then begin
                   aux = aux * 10;  
                   j=j+1;
                   flagc1=true;
                end 
                else begin 
                    flagc2=false; 
                end
              end {end while}
            end {end bloque}    			

          acum=acum +aux;  // resultado parcial 
          i=i+1;           
          d=d/2;           // toma el resto del numero decimal
          flagc1=true;  
       end {end if}
       else 
       begin 
          flagc1=false; 
       end
      end {end while}

      begin {nuevo bloque, ubica el ultimo digito en la posicion que corresponde}

         bool flagc1;
         integer j;
         j=0;
         flagc1=true;                   
         while (flagc1)
         begin         
            if (j<i) then
            begin
              d = d * 10;
              j=j+1;
              flagc1=true;  
            end 
            else 
            begin 
              flagc1=false;
            end
         end {end ciclo}
      end {end bloque}

      return acum + d;  {resultaod final y retorna}
end

{retorna el maximo comun divisor de a y b}
integer gcd (integer a, integer b) begin
	integer i;
	integer result;
    i=1;
    result = i;
	while ( i < (a+b)) begin
		if (((a % i) == 0) &&  ((b%i) ==0 )) then
			begin result = i; end
		i = i + 1;
	end
	return result;
end

{ Calcula el valor del real m elevado a la n}
integer potencia(integer m, integer n)
begin
	integer i;
	integer acum;
        bool continuar;
	acum=1;
	i=1;
        continuar =true;
	while (continuar)
        begin
		if(i<n || i==n) then
                begin
			acum=acum * m;
			i=i+1;
		end
		else 
                begin 
                    continuar = false; {simulo el break, con un flag booelano}
                end
	end 
	return(acum);  
end 

   integer  main()
   begin
        integer y;
        y=9;
        factorial(factorial(factorial(factorial(1)))+1);

        return potencia(nthprime(2),y);

   end
end